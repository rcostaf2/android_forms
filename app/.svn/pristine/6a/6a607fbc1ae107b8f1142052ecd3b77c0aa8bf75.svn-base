package com.example.murilo.osaltarede.activities;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.media.MediaScannerConnection;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.example.murilo.osaltarede.R;
import com.example.murilo.osaltarede.activities.apis.DiarioEndApi;
import com.example.murilo.osaltarede.activities.models.DImagem;
import com.example.murilo.osaltarede.activities.models.DSend;
import com.example.murilo.osaltarede.activities.models.DbHelper;
import com.example.murilo.osaltarede.activities.models.DiarioItem;
import com.example.murilo.osaltarede.activities.models.User;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.kyanogen.signatureview.SignatureView;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;

import retrofit.Callback;
import retrofit.RestAdapter;
import retrofit.RetrofitError;
import retrofit.client.Response;

public class DiarioSync extends AppCompatActivity {

    private DbHelper dbHelper;
    public User user = null;
    private DiarioItem di;
    private int ImgIndex =0 ;
    private ArrayList<DSend> items;
    Button buttonStart;
    TextView textInfoA, textInfoB, textInfoC, textInfoD;
    TextView textDuration1, textDuration2;
    TextView textDuration3, textDuration4;
    ProgressBar pb;

    String infoMsgA;
    String infoMsgB;
    String infoMsgC;
    String infoMsgD;

    ShareClass shareObj = new ShareClass(10);
    long startingTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_diario_sync);//see xml layout
        Bundle extras = getIntent().getExtras();
        //user = new User();
        dbHelper = new DbHelper(this);
        Intent intentIncoming = getIntent();
        if (extras != null) {
            User user_gt = (User) getIntent().getSerializableExtra("user");// OK
            user =  dbHelper.getUserByExternalId(user_gt.getExternal_id());
        }
        buttonStart = (Button) findViewById(R.id.buttonstart);
        textInfoA = (TextView) findViewById(R.id.infoa);
        textInfoB = (TextView) findViewById(R.id.infob);
        textInfoC = (TextView) findViewById(R.id.infoc);
        textInfoD = (TextView) findViewById(R.id.infod);
        textDuration1 = (TextView) findViewById(R.id.duration1);
        textDuration2 = (TextView) findViewById(R.id.duration2);
        textDuration3 = (TextView) findViewById(R.id.duration3);
        textDuration4 = (TextView) findViewById(R.id.duration4);
        pb = (ProgressBar) findViewById(R.id.progressBar);
        buttonStart.setVisibility(View.VISIBLE);
     //   buttonStart.setOnClickListener(new View.OnClickListener() {

        //    @Override
        //    public void onClick(View arg0) {
                pb.setVisibility(View.VISIBLE);
                infoMsgA = "Item\n";
                infoMsgB = "Fotos\n";
                //infoMsgC = "Materias e Serviços\n";
               // infoMsgD = "Capas\n";
                textInfoA.setText(infoMsgA);
                textInfoB.setText(infoMsgB);
                //textInfoC.setText(infoMsgC);
              //  textInfoD.setText(infoMsgD);
                buttonStart.setVisibility(View.GONE);
                startSync();



         //   }
      //  });

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_sync, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                // This ID represents the Home or Up button.
                Intent intent = new Intent();
                setResult(RESULT_OK, intent);
               // intent.putExtra("user", user);
                finish();
                return true;

            case R.id.action_info:
                InfoDialog();
                return true;


            default:
                return super.onOptionsItemSelected(item);
        }
    }



    public void InfoDialog(){
        Intent intent = new Intent();
        setResult(RESULT_CANCELED,intent);
        finish();
    }
    private void startSync() { //Cria o gerador do AlertDialog
        di = dbHelper.selectNextDiarioItem(user.getExternal_id());
        if(di.getId() != 0){

            Gson gson = new Gson();
            Type type = new TypeToken<ArrayList<DImagem>>() {}.getType();
            ArrayList<DImagem> listImagem = gson.fromJson(di.getImagem(), type);
            items = new ArrayList<DSend>();
            ImgIndex=0;
            for (int i=0; i < listImagem.size(); i++) {
                DImagem auxDimg = listImagem.get(i);
                DSend aux = new DSend();
                aux.setInfogson(auxDimg.getImagem());
                aux.setField("IMAGEM");
                aux.setI(Integer.toString(i));
                items.add(items.size(),aux);
            }
            DSend aux1 = new DSend();
            aux1.setInfogson(di.getInfo());
            aux1.setField("DIARIO");
            aux1.setTam(Integer.toString(di.getInfo().length()));
            aux1.setI("0");
            items.add(items.size(),aux1);
            DSend aux2 = new DSend();
            aux2.setInfogson(di.getCapa());
            aux2.setField("CABEÇALHO");
            aux2.setTam(Integer.toString(di.getCapa().length()));
            aux2.setI("0");
            items.add(items.size(),aux2);
            DSend aux3 = new DSend();
            aux3.setInfogson(di.getServicos());
            aux3.setField("SERVIÇOS");
            aux3.setTam(Integer.toString(di.getServicos().length()));
            aux3.setI("0");
            items.add(items.size(),aux3);
            infoMsgA += Integer.toString(di.getId()) ;
            textInfoA.setText(infoMsgA);
            sincronizarItens();

        }
        else{
            //showEstacoes();
            ImgIndex=0;
            pb.setVisibility(View.GONE);
            Toast.makeText(getApplicationContext(), "Sincronização concluida! ",
                    Toast.LENGTH_SHORT).show();
            InfoDialog();
        }
    }
    public void refreshItems(DSend aux3){
        if (aux3.getField().equals("IMAGEM")){
            infoMsgA += "\n";
            textInfoA.setText(infoMsgA);
            infoMsgB += "1 de " + Integer.toString(ImgIndex+1)  + "\n";
            textInfoB.setText(infoMsgB);
           // infoMsgC +=  "\n";
          //  textInfoC.setText(infoMsgC);
           // infoMsgD += "\n";
           // textInfoD.setText(infoMsgD);
        }
        if (aux3.getField().equals("SERVIÇOS")){
           // infoMsgA += "\n";
           // textInfoA.setText(infoMsgA);
            //infoMsgC +=  aux3.getTam()  + "\n";
           // textInfoC.setText(infoMsgC);
          //  infoMsgD += "\n";
          //  textInfoD.setText(infoMsgD);
        }
        if (aux3.getField().equals("CABEÇALHO")){
//            infoMsgA += "\n";
//            textInfoA.setText(infoMsgA);
//            infoMsgB += "\n";
//            textInfoB.setText(infoMsgB);
//            infoMsgC +=  "\n";
//            textInfoC.setText(infoMsgC);
//            infoMsgD +=  aux3.getTam()  + "\n";
//            textInfoD.setText(infoMsgD);
        }
        if (aux3.getField().equals("DIARIO")){
//            infoMsgA += "\n";
//            textInfoA.setText(infoMsgA);
//            infoMsgB += "\n";
//            textInfoB.setText(infoMsgB);
//            infoMsgC +=  "\n";
//            textInfoC.setText(infoMsgC);
//            infoMsgD +=  aux3.getTam().length()  + "\n";
//            textInfoD.setText(infoMsgD);
        }
    }
    private void sincronizarItens(){

        if (items.size() == ImgIndex){
            infoMsgA += "-------\n";
            textInfoA.setText(infoMsgA);
            infoMsgB += "-------\n";
            textInfoB.setText(infoMsgB);
//            infoMsgC +=  "------\n";
//            textInfoC.setText(infoMsgC);
//            infoMsgD +=  "------\n";
//            textInfoD.setText(infoMsgD);
            dbHelper.cleanDiarioItems(di.getId());
            startSync();
        }else{
            DSend aux3;
            aux3 = items.get(ImgIndex);
            refreshItems(aux3);

            confirmaSincronizar(aux3.getInfogson(),aux3.getField(),aux3.getI());
        }

    }

    private void confirmaSincronizar(String infojson, String field, String i) { //Cria o gerador do AlertDialog
        System.setProperty("http.keepAlive", "false");
        RestAdapter adapter = new RestAdapter.Builder()
                .setEndpoint(dbHelper.ROOT_URL) //Setting the Root URL
                .build(); //Finally building the adapter
        DiarioEndApi api = adapter.create(DiarioEndApi.class);
        //Defining the method insertuser of our interface
        api.send_data(
                //Passing the values by getting it from editTexts
                di.getKeysave(),
                //di.getInfo(),
                Integer.toString(user.getExternal_id()),
                field,i,
                //di.getCapa(),
                // di.getServicos(), di.getImagem(),
                Integer.toString(di.getEstacao_id()),infojson,
                //Creating an anonymous callback
                new Callback<String>() {
                    @Override
                    public void success(String list, Response response) {
                        //Dismissing the loading progressbar
                        //loading.dismiss();
                        ImgIndex += 1;
                        sincronizarItens();
                    }
                    @Override
                    public void failure(RetrofitError error) {
                        //you can handle the errors here
                        Toast.makeText(getApplicationContext(), "Problema de conexão com o servidor. Tente novamente. ",
                                Toast.LENGTH_SHORT).show();
                    }
                }
        );
    }
    public class ShareClass {

        int counter1;
        int counter2;

        Object lock1;
        Object lock2;

        ShareClass(int c) {
            counter1 = c;
            counter2 = c;
            lock1 = new Object();
            lock2 = new Object();
        }

        public int getCounter1() {
            return counter1;
        }

        public int getCounter2() {
            return counter2;
        }

        public int delayDecCounter1(int delay) {

            //do something not access the share obj
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

            synchronized (this) {
                int tmpCounter = counter1;

                try {
                    Thread.sleep(delay);
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }

                tmpCounter--;
                counter1 = tmpCounter;

                return counter1;
            }

        }

        public int delayDecCounter2(int delay) {

            //do something not access the share obj
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

            synchronized (this) {
                int tmpCounter = counter2;

                try {
                    Thread.sleep(delay);
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }

                tmpCounter--;
                counter2 = tmpCounter;

                return counter2;
            }

        }
    }
}